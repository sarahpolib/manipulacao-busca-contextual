posicoes_relativas <- grep(padrao, df_arquivo_D1$V4, ignore.case = TRUE)
if (length(posicoes_relativas) == 0) next
# Pega os índices reais dentro de dados3 (ou df_arquivo_tudo)
posicoes_absolutas <- as.numeric(rownames(df_arquivo_D1)[posicoes_relativas])
for (i in posicoes_absolutas) {
trecho <- df_arquivo_tudo[i:(min(nrow(df_arquivo_tudo), i + 10)), c("V4", "V5")]
# (Opcional) remover tags tipo <a>, <p>, <h>
trecho$V4 <- gsub("<[^>]+>", "", trecho$V4)
bloco_texto <- apply(trecho, 1, function(linha) paste(linha, collapse = "\t"))
bloco_completo <- c(paste0("### Arquivo: ", arquivo), "--- Trecho ---", bloco_texto, "")
blocos_geral[[length(blocos_geral) + 1]] <- bloco_completo
}
}
if (length(blocos_geral) > 0) {
saida_final <- unlist(blocos_geral)
nome_arquivo_saida <- paste0("trechos_", nome_palavra, ".txt")
writeLines(saida_final, nome_arquivo_saida)
}
}
#iniciar area de trabalho
rm(list = ls())
#carregar arquivo
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem
head(dados)
str(dados)
#View(dados)
length(dados[,1])
dados_originais <- dados
unique(dados$V5)
#Retirar caracteres####
dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", "", dados$V4, ignore.case=T)
dados$V4 <- tolower(dados$V4)
str(dados)
#Retirar dados contextuais e roteiro, deixando apenas trilhas D1 e S####
dados2 <- dados %>%
filter(!V1 %in% c("Dados Contextuais", "Roteiro", "ROTEIRO", "S1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
#checagem
str(dados2)
View(dados2)
dados2
names(dados2)
#Selecionar apenas as colunas de interesse: anotação e arquivo ####
dados3 <- dados2 %>%
select(V1, V4, V5)
## Lista de palavras e seus nomes de arquivo ####
palavras <- list(
RICO = "\\brico\\b",
POBRE = "\\bpobre\\b",
BAIRRO = "\\bbairro\\b",
LAZER = "\\blazer\\b",
TRABALHO_SERVICO = "\\b(trabalho|serviço)\\b",
MEGASENA = "\\bmega[\\s\\-]?sena\\b"
)
## Faz a busca para cada palavra ####
for (nome_palavra in names(palavras)) {
padrao <- palavras[[nome_palavra]]
blocos_geral <- list()
# Percorre os arquivos do corpus e para cada arquivo
arquivos <- unique(dados3$V5)
for (arquivo in arquivos) {
# Subconjunto com falas D1 apenas para busca
df_arquivo_D1 <- subset(dados3, V5 == arquivo & V1 == "D1")
# Subconjunto completo para pegar o trecho depois
df_arquivo_tudo <- subset(dados3, V5 == arquivo)
# Encontra posições em que a palavra aparece nas falas D1
posicoes_relativas <- grep(padrao, df_arquivo_D1$V4, ignore.case = TRUE)
if (length(posicoes_relativas) == 0) next
# Pega os índices reais dentro de dados3 (ou df_arquivo_tudo)
posicoes_absolutas <- as.numeric(rownames(df_arquivo_D1)[posicoes_relativas])
for (i in posicoes_absolutas) {
trecho <- df_arquivo_tudo[i:(min(nrow(df_arquivo_tudo), i + 10)), c("V4", "V5")]
# (Opcional) remover tags tipo <a>, <p>, <h>
trecho$V4 <- gsub("<[^>]+>", "", trecho$V4)
bloco_texto <- apply(trecho, 1, function(linha) paste(linha, collapse = "\t"))
bloco_completo <- c(paste0("### Arquivo: ", arquivo), "--- Trecho ---", bloco_texto, "")
blocos_geral[[length(blocos_geral) + 1]] <- bloco_completo
}
}
if (length(blocos_geral) > 0) {
saida_final <- unlist(blocos_geral)
nome_arquivo_saida <- paste0("trechos_", nome_palavra, ".txt")
writeLines(saida_final, nome_arquivo_saida)
}
}
## Lista de palavras e seus nomes de arquivo ####
palavras <- list(
RICO = "\\brico\\b",
POBRE = "\\bpobre\\b",
BAIRRO = "\\bbairro\\b",
LAZER = "\\blazer\\b",
TRABALHO_SERVICO = "\\b(trabalho|serviço)\\b",
MEGASENA = "\\bmega[\\s\\-]?sena\\b"
)
## Faz a busca para cada palavra ####
for (nome_palavra in names(palavras)) {
padrao <- palavras[[nome_palavra]]
blocos_geral <- list()
# Percorre os arquivos do corpus e para cada arquivo
arquivos <- unique(dados3$V5)
for (arquivo in arquivos) {
# Subconjunto com falas D1 apenas para busca
df_arquivo_D1 <- subset(dados3, V5 == arquivo & V1 == "D1")
# Subconjunto completo para pegar o trecho depois
df_arquivo_tudo <- subset(dados3, V5 == arquivo)
# Encontra posições em que a palavra aparece nas falas D1
posicoes_relativas <- grep(padrao, df_arquivo_D1$V4, ignore.case = TRUE)
if (length(posicoes_relativas) == 0) next
# Pega os índices reais dentro de dados3 (ou df_arquivo_tudo)
posicoes_absolutas <- as.numeric(rownames(df_arquivo_D1)[posicoes_relativas])
for (i in posicoes_absolutas) {
trecho <- df_arquivo_tudo[i:(min(nrow(df_arquivo_tudo), i + 15)), c("V4", "V5")]
# (Opcional) remover tags tipo <a>, <p>, <h>
trecho$V4 <- gsub("<[^>]+>", "", trecho$V4)
bloco_texto <- apply(trecho, 1, function(linha) paste(linha, collapse = "\t"))
bloco_completo <- c(paste0("### Arquivo: ", arquivo), "--- Trecho ---", bloco_texto, "")
blocos_geral[[length(blocos_geral) + 1]] <- bloco_completo
}
}
if (length(blocos_geral) > 0) {
saida_final <- unlist(blocos_geral)
nome_arquivo_saida <- paste0("trechos_", nome_palavra, ".txt")
writeLines(saida_final, nome_arquivo_saida)
}
}
#carregar pacotes
library(act)
library(tidyverse)
#iniciar area de trabalho
rm(list = ls())
setwd("C:/Users/sarah/Downloads/analiseSclasse/analise-qualitativa/amostra2")
#carregar arquivo
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem
head(dados)
str(dados)
#View(dados)
length(dados[,1])
#View(dados)
length(dados[,1])
dados_originais <- dados
unique(dados$V5)
dados
#Retirar caracteres#### esse passo acho desnecessáario, ele foi pensado pro  mfa
#dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", "", dados$V4, ignore.case=T)
#dados$V4 <- tolower(dados$V4)
#str(dados)
View(dados)
#colocar as anotações em ordem cronológica
dados2 <- dados %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
View(dados2)
which(dados$V4, "TRABALHO")
which(dados$V4 == "TRABALHO")
arquivos <- unique(dados$V5)
unique(dados$V5)
anotacoes_dentro <- dados_arquivo %>% filter(
# Para cada anotação, verifica se ela está dentro de algum intervalo de TRABALHO
sapply(1:n(), function(i) {
any(intervalos_trabalho$inicio <= V2[i] & intervalos_trabalho$fim >= V3[i])
})
)
# Loop por arquivo
for (arquivo in arquivos) {
dados_arquivo <- dados %>% filter(V5 == arquivo)
# Pegar intervalos "TRABALHO"
intervalos_trabalho <- dados_arquivo %>%
filter(grepl("TRABALHO", V4, ignore.case = TRUE)) %>%
select(inicio = V2, fim = V3)
# Se houver algum intervalo de TRABALHO
if (nrow(intervalos_trabalho) > 0) {
anotacoes_dentro <- dados_arquivo %>% filter(
# Para cada anotação, verifica se ela está dentro de algum intervalo de TRABALHO
sapply(1:n(), function(i) {
any(intervalos_trabalho$inicio <= V2[i] & intervalos_trabalho$fim >= V3[i])
})
)
# Exportar para txt
nome_saida <- paste0("anotacoes_", tools::file_path_sans_ext(basename(arquivo)), ".txt")
write_lines(anotacoes_dentro$V4, nome_saida)
}
}
dados_arquivo
dados_arquivo <- dados %>%
filter(V5 == arquivo)
dados_arquivo
intervalos_trabalho
dados %>%
filter(V1 == "TRABALHO\/OCUPAÇÃO")
dados %>%
filter(V1 == "TRABALHO/OCUPAÇÃO")
dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE) %>%
unique(V4)
dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE) %>%
unique(dados$V4)
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
dados.ROTEIRO
unique(dados.ROTEIRO$V4)
#iniciar area de trabalho
rm(list = ls())
setwd("C:/Users/sarah/Downloads/analiseSclasse/analise-qualitativa/amostra2")
#carregar arquivo
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem
head(dados)
str(dados)
#colocar as anotações em ordem cronológica
dados2 <- dados %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
#checagem da trilha ROTEIRO
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
unique(dados$V4)
dados.ROTEIRO
levels(dados.ROTEIRO$V4)
levels(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
#iniciar area de trabalho
rm(list = ls())
setwd("C:/Users/sarah/Downloads/analiseSclasse/analise-qualitativa/amostra2")
#carregar arquivo
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem
head(dados)
str(dados)
#colocar as anotações em ordem cronológica
dados2 <- dados %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
print()
#Retirar caracteres e colocar em caixa baixa
dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", "", dados$V4, ignore.case=T)
dados$V4 <- tolower(dados$V4)
str(dados)
unique(dados$V1)
dados$V1 <- toupper(dados$V1)
unique(dados$V1)
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
print()
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
View(dados2)
#checagem da trilha ROTEIRO
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
levels(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
#Retirar caracteres, colcoar anotações em caixa baixa e nome de trilhas em caixa alta
dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", " ", dados$V4, ignore.case=T)
dados$V4 <- tolower(dados$V4)
dados$V1 <- toupper(dados$V1)
unique(dados$V1)
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
#checagem da trilha ROTEIRO
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
arquivos <- unique(dados$V5)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("trabalho","trabalho ocupação", "trabalhoocupação"), "TRABALHO")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("infancia", "infância"), "INFANCIA")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade", "questionário de identidade "), "QUESTIONARIO DE IDENTIDADE")
unique(dados.ROTEIRO$V4)
dados$V4 <- sub("\\s+$", "", dados$V4) #remove espaços do final de cada string
#colocar as anotações em ordem cronológica e selecionar as trilhas de interesse
unique(dados$V1)
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
#checagem da trilha ROTEIRO
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("trabalho","trabalho ocupação", "trabalhoocupação"), "TRABALHO")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("infancia", "infância"), "INFANCIA")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade"), "QUESTIONARIO DE IDENTIDADE")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística", "produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística", "avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística"), "PRODUCAO PERCEPCAO AVALIACAO LINGUISTICA")
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- toupper(dados$V4)
dados.ROTEIRO$V4 <- toupper(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("trabalho","trabalho ocupação", "trabalhoocupação"), "TRABALHO")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("infancia", "infância"), "INFÂNCIA")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade"), "QUESTIONÁRIO DE IDENTIDADE")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística", "produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística", "avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística"), "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA")
dados.ROTEIRO$V4 <- toupper(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
#iniciar area de trabalho
rm(list = ls())
setwd("C:/Users/sarah/Downloads/analiseSclasse/analise-qualitativa/amostra2")
#carregar arquivo
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem
head(dados)
str(dados)
#View(dados)
length(dados[,1])
dados_originais <- dados
unique(dados$V5)
#Retirar caracteres, colcoar anotações em caixa baixa e nome de trilhas em caixa alta
dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", "", dados$V4, ignore.case=T)
dados$V4 <- sub("\\s+$", "", dados$V4) #remove espaços do final de cada string
dados$V4 <- tolower(dados$V4)
dados$V1 <- toupper(dados$V1)
str(dados)
#colocar as anotações em ordem cronológica e selecionar as trilhas de interesse
unique(dados$V1)
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
#checagem da trilha ROTEIRO
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("trabalho","trabalho ocupação", "trabalhoocupação"), "TRABALHO")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("infancia", "infância"), "INFÂNCIA")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade"), "QUESTIONÁRIO DE IDENTIDADE")
dados.ROTEIRO$V4 <- replace(dados.ROTEIRO$V4, dados.ROTEIRO$V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística", "produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística", "avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística"), "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA")
dados.ROTEIRO$V4 <- toupper(dados.ROTEIRO$V4)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
TRUE ~ V4,
V4 = toupper(V4)
)
)
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
TRUE ~ V4
)
V4 = toupper(V4)
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
TRUE ~ V4
),
V4 = toupper(V4)
)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
V4 %in% "FAMILIA" ~ "FAMÍLIA"
TRUE ~ V4
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
V4 %in% "FAMILIA" ~ "FAMÍLIA",
TRUE ~ V4
),
V4 = toupper(V4)
)
unique(dados.ROTEIRO$V4)
#carregar pacotes#
library(tidyverse)
#iniciar area de trabalho
rm(list = ls())
setwd("C:/Users/sarah/Downloads/analiseSclasse/analise-qualitativa/amostra2")
#carregar arquivo####
arquivo<-"amostra2"
arquivo2<-paste(arquivo, ".txt", sep="")
dados <- read.delim(arquivo2, header=FALSE, quote = "", fileEncoding = "UTF-8")
#checagem dos dados ####
head(dados)
str(dados)
#View(dados)
length(dados[,1])
dados_originais <- dados
unique(dados$V5)
#MANIPULAÇÃO DOS DADOS:####
##Retirar caracteres, colOcoar anotações em caixa baixa e nome de trilhas em caixa alta####
dados$V4 <- gsub("\\(|\\)|\\{|\\}|\\'|\\[|\\]|\\!|\\.|\\/|\\?|\"", "", dados$V4, ignore.case=T)
dados$V4 <- sub("\\s+$", "", dados$V4) #remove espaços do final de cada string
dados$V4 <- tolower(dados$V4)
dados$V1 <- toupper(dados$V1)
str(dados)
##Anotações em ordem cronológica e selecionar trilhas de interesse ####
unique(dados$V1)
dados2 <- dados %>%
filter(V1 %in% c("ROTEIRO", "S", "D1")) %>%
arrange(V5, V2) %>% #ordem cronológica a partir de tempo incial
droplevels()
##checagem da trilha ROTEIRO####
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
#Arrumar inconsistências
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
V4 %in% c("trabalho", "trabalho ocupação", "trabalhoocupação") ~ "TRABALHO",
V4 %in% c("infancia", "infância") ~ "INFÂNCIA",
V4 %in% c("questionario de identidade", "questionário de identidade", "questionário de indentidade") ~ "QUESTIONÁRIO DE IDENTIDADE",
V4 %in% c("produçãopercepçãoavaliaçãolinguística", "produção percepção avaliação linguística",
"produçãopercepçãoavaliação linguística", "produçãoperceçãoavaliação linguística",
"avaliação  produção  percepção linguística", "produçãopercepção e avaliação linguística") ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
V4 %in% "familia" ~ "FAMÍLIA",
TRUE ~ V4
),
V4 = toupper(V4)
)
dados.ROTEIRO
##checagem da trilha ROTEIRO####
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO <- dados.ROTEIRO %>%
mutate(
V4 = case_when(
str_detect(V4, regex("trab", ignore_case = TRUE)) ~ "TRABALHO",
str_detect(V4, regex("inf", ignore_case = TRUE)) ~ "INFÂNCIA",
str_detect(V4, regex("quest", ignore_case = TRUE)) ~ "QUESTIONÁRIO DE IDENTIDADE",
str_detect(V4, regex("produ", ignore_case = TRUE)) ~ "PRODUÇÃO PERCEPÇÃO AVALIAÇÃO LINGUÍSTICA",
str_detect(V4, regex("fam", ignore_case = TRUE)) ~ "FAMÍLIA",
TRUE ~ toupper(V4)
)
)
unique(dados.ROTEIRO$V4)
dados.ROTEIRO
dados.TRABALHO <- dados.ROTEIRO %>%
filter(V4 == "TRABALHO") %>%
droplevels()
dados.TRABALHO
##checagem da trilha ROTEIRO####
dados.ROTEIRO  <- dados %>%
filter(V1 == "ROTEIRO", ignore.case = TRUE)
unique(dados.ROTEIRO$V4)
# Atualiza a coluna V4 de dados com as correções de dados.ROTEIRO
dados <- dados %>%
left_join(
dados.ROTEIRO %>% select(V1, V4_corrigido = V4),
by = "V1"  # substitua V2 por uma coluna única que identifique cada linha corretamente
) %>%
mutate(
V4 = coalesce(V4_corrigido, V4)  # usa o valor corrigido se existir
) %>%
select(-V4_corrigido)
# Atualiza a coluna V4 de dados com as correções de dados.ROTEIRO
dados <- dados %>%
left_join(
dados.ROTEIRO %>% select(V1, V4_corrigido = V4),
by = "V1"  # substitua V2 por uma coluna única que identifique cada linha corretamente
) %>%
mutate(
V4 = coalesce(V4_corrigido, V4)  # usa o valor corrigido se existir
) %>%
select(-V4_corrigido)
